- name: install backend
  hosts: backend
  become: yes

  tasks:
    - name: Disable existing Node.js module
      ansible.builtin.command: dnf module disable nodejs -y

    - name: Enable Node.js 20 module
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: Install Node.js
      ansible.builtin.yum:
        name: nodejs
        state: present
    
    - name: Create a system user for the expense app
      ansible.builtin.user:
        name: expense
        system: yes
        shell: /sbin/nologin
        home: /app
        comment: "expense user"    

    - name: checking the directory
      ansible.builtin.stat:
        path: /app
      register: dir_status

    - name: create /app directory
      when: dir_status.stat.exists == False
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download expense-backend-v2.zip to /tmp
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip  

    - name: unzip the cexpense-backend-v2.zip /app dir_status
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: install dependinces
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy backend Service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service 

    - name: Load the service
      ansible.builtin.command: systemctl daemon-reload
      become: true


    - name: Install mysql
      ansible.builtin.yum:
        name: mysql-server
        state: installed

    - name: load backend data into mysql
      ansible.builtin.command: mysql -h 172.31.93.168 -uroot -pExpenseApp@1 < /app/schema/backend.sql 

    - name: start and enable the nodejs
      ansible.builtin.service:
        name: backend
        state: started
        enabled: true  